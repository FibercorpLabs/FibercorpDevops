# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2017 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Filter(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = ClassMeta("cobra.model.copp.Filter")

    meta.moClassName = "coppFilter"
    meta.rnFormat = "filter-[%(name)s]"
    meta.category = MoCategory.REGULAR
    meta.label = "Filter entry"
    meta.writeAccessMask = 0x100000000000001
    meta.readAccessMask = 0x100000000000001
    meta.isDomainable = False
    meta.isReadOnly = False
    meta.isConfigurable = True
    meta.isDeletable = True
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.copp.Permit1w")
    meta.childClasses.add("cobra.model.copp.Permit5min")
    meta.childClasses.add("cobra.model.copp.Permit1qtr")
    meta.childClasses.add("cobra.model.copp.PermitHist1d")
    meta.childClasses.add("cobra.model.copp.PermitHist1qtr")
    meta.childClasses.add("cobra.model.copp.FilterStatsHist15min")
    meta.childClasses.add("cobra.model.copp.FilterStats1mo")
    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.copp.Permit1year")
    meta.childClasses.add("cobra.model.copp.PermitHist1h")
    meta.childClasses.add("cobra.model.copp.PermitHist1w")
    meta.childClasses.add("cobra.model.copp.Permit1d")
    meta.childClasses.add("cobra.model.copp.Permit1h")
    meta.childClasses.add("cobra.model.copp.FilterStatsHist1qtr")
    meta.childClasses.add("cobra.model.copp.FilterStatsHist1w")
    meta.childClasses.add("cobra.model.copp.FilterStatsHist1h")
    meta.childClasses.add("cobra.model.copp.FilterStats5min")
    meta.childClasses.add("cobra.model.copp.FilterStatsHist1d")
    meta.childClasses.add("cobra.model.copp.FilterStats15min")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.copp.Permit15min")
    meta.childClasses.add("cobra.model.copp.FilterStatsHist1year")
    meta.childClasses.add("cobra.model.copp.PermitHist1year")
    meta.childClasses.add("cobra.model.copp.PermitHist5min")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.copp.FilterStatsHist1mo")
    meta.childClasses.add("cobra.model.copp.FilterStats1w")
    meta.childClasses.add("cobra.model.copp.FilterStats1year")
    meta.childClasses.add("cobra.model.copp.Permit1mo")
    meta.childClasses.add("cobra.model.copp.FilterStats1qtr")
    meta.childClasses.add("cobra.model.copp.PermitHist1mo")
    meta.childClasses.add("cobra.model.copp.FilterStats1d")
    meta.childClasses.add("cobra.model.copp.PermitHist15min")
    meta.childClasses.add("cobra.model.copp.FilterStatsHist5min")
    meta.childClasses.add("cobra.model.copp.FilterStats1h")

    meta.childNamesAndRnPrefix.append(("cobra.model.copp.FilterStatsHist15min", "HDcoppFilterStats15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.copp.FilterStatsHist1year", "HDcoppFilterStats1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.copp.FilterStatsHist1qtr", "HDcoppFilterStats1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.copp.FilterStats15min", "CDcoppFilterStats15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.copp.FilterStats1year", "CDcoppFilterStats1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.copp.FilterStatsHist5min", "HDcoppFilterStats5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.copp.FilterStats5min", "CDcoppFilterStats5min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.copp.FilterStatsHist1mo", "HDcoppFilterStats1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.copp.FilterStats1qtr", "CDcoppFilterStats1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.copp.FilterStats1mo", "CDcoppFilterStats1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.copp.FilterStatsHist1w", "HDcoppFilterStats1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.copp.FilterStatsHist1h", "HDcoppFilterStats1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.copp.FilterStatsHist1d", "HDcoppFilterStats1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.copp.FilterStats1w", "CDcoppFilterStats1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.copp.FilterStats1d", "CDcoppFilterStats1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.copp.FilterStats1h", "CDcoppFilterStats1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.copp.PermitHist1year", "HDcoppPermit1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.copp.PermitHist15min", "HDcoppPermit15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.copp.PermitHist1qtr", "HDcoppPermit1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.copp.Permit1year", "CDcoppPermit1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.copp.Permit15min", "CDcoppPermit15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.copp.PermitHist5min", "HDcoppPermit5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.copp.Permit5min", "CDcoppPermit5min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.copp.Permit1qtr", "CDcoppPermit1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.copp.PermitHist1mo", "HDcoppPermit1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.copp.PermitHist1d", "HDcoppPermit1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.copp.PermitHist1h", "HDcoppPermit1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.copp.PermitHist1w", "HDcoppPermit1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.copp.Permit1mo", "CDcoppPermit1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.copp.Permit1w", "CDcoppPermit1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.copp.Permit1d", "CDcoppPermit1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.copp.Permit1h", "CDcoppPermit1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))

    meta.parentClasses.add("cobra.model.copp.Rule")

    meta.rnPrefixes = [
        ('filter-', True),
    ]

    prop = PropMeta("str", "action", "action", 30742, PropCategory.REGULAR)
    prop.label = "filter action"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "permit"
    prop._addConstant("deny", "deny", 1)
    prop._addConstant("permit", "permit", 0)
    meta.props.add("action", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "dstAddr", "dstAddr", 30736, PropCategory.REGULAR)
    prop.label = "Destination Address"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("dstAddr", prop)

    prop = PropMeta("str", "dstPortFrom", "dstPortFrom", 30740, PropCategory.REGULAR)
    prop.label = "Destination Port From"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("dstPortFrom", prop)

    prop = PropMeta("str", "dstPortTo", "dstPortTo", 30741, PropCategory.REGULAR)
    prop.label = "Destination Port To"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("dstPortTo", prop)

    prop = PropMeta("str", "ipProto", "ipProto", 30737, PropCategory.REGULAR)
    prop.label = "IP Protocol"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 255)]
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("egp", "egp", 8)
    prop._addConstant("eigrp", "eigrp", 88)
    prop._addConstant("icmp", "icmp", 1)
    prop._addConstant("icmpv6", "icmpv6", 58)
    prop._addConstant("igmp", "igmp", 2)
    prop._addConstant("igp", "igp", 9)
    prop._addConstant("l2tp", "l2tp", 115)
    prop._addConstant("ospfigp", "ospf", 89)
    prop._addConstant("pim", "pim", 103)
    prop._addConstant("tcp", "tcp", 6)
    prop._addConstant("udp", "udp", 17)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("ipProto", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 32629, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 30733, PropCategory.REGULAR)
    prop.label = "filter name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 512)]
    meta.props.add("name", prop)

    prop = PropMeta("str", "operSt", "operSt", 30743, PropCategory.REGULAR)
    prop.label = "Operational State"
    prop.isOper = True
    prop._addConstant("down", "down", 2)
    prop._addConstant("up", "up", 1)
    meta.props.add("operSt", prop)

    prop = PropMeta("str", "operStQual", "operStQual", 30744, PropCategory.REGULAR)
    prop.label = "Operational State Qualifier"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "none"
    prop._addConstant("hardware-err", "hardware-error", 3)
    prop._addConstant("none", "none", 0)
    prop._addConstant("policer-unavailable", "policer-unavailable", 2)
    prop._addConstant("tcam-unavailable", "tcam-unavailable", 1)
    meta.props.add("operStQual", prop)

    prop = PropMeta("str", "prio", "prio", 30734, PropCategory.REGULAR)
    prop.label = "filter priority"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 65535)]
    prop.defaultValue = 65535
    prop.defaultValueStr = "65535"
    meta.props.add("prio", prop)

    prop = PropMeta("str", "qosmCfgFailedBmp", "qosmCfgFailedBmp", 31068, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    prop._addConstant("copp:Filteraction_failed_flag", None, 1)
    prop._addConstant("copp:FilterdstAddr_failed_flag", None, 2)
    prop._addConstant("copp:FilterdstPortFrom_failed_flag", None, 4)
    prop._addConstant("copp:FilterdstPortTo_failed_flag", None, 8)
    prop._addConstant("copp:FilteripProto_failed_flag", None, 16)
    prop._addConstant("copp:FilterlcOwn_failed_flag", None, -9223372036854775808)
    prop._addConstant("copp:FiltermodTs_failed_flag", None, 2305843009213693952)
    prop._addConstant("copp:FiltermonPolDn_failed_flag", None, 32)
    prop._addConstant("copp:Filtername_failed_flag", None, 64)
    prop._addConstant("copp:Filterprio_failed_flag", None, 512)
    prop._addConstant("copp:FiltersrcAddr_failed_flag", None, 8192)
    prop._addConstant("copp:FiltersrcPortFrom_failed_flag", None, 16384)
    prop._addConstant("copp:FiltersrcPortTo_failed_flag", None, 32768)
    prop._addConstant("copp:Filteruid_failed_flag", None, 4611686018427387904)
    meta.props.add("qosmCfgFailedBmp", prop)

    prop = PropMeta("str", "qosmCfgFailedTs", "qosmCfgFailedTs", 31070, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    meta.props.add("qosmCfgFailedTs", prop)

    prop = PropMeta("str", "qosmCfgState", "qosmCfgState", 31069, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    meta.props.add("qosmCfgState", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "srcAddr", "srcAddr", 30735, PropCategory.REGULAR)
    prop.label = "Source Address"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("srcAddr", prop)

    prop = PropMeta("str", "srcPortFrom", "srcPortFrom", 30738, PropCategory.REGULAR)
    prop.label = "Source Port From"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("srcPortFrom", prop)

    prop = PropMeta("str", "srcPortTo", "srcPortTo", 30739, PropCategory.REGULAR)
    prop.label = "Source Port To"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("srcPortTo", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "uid", "uid", 8, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("uid", prop)

    meta.namingProps.append(getattr(meta.props, "name"))
    getattr(meta.props, "name").needDelimiter = True

    def __init__(self, parentMoOrDn, name, markDirty=True, **creationProps):
        namingVals = [name]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################
