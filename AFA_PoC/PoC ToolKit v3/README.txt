**********************************************************************************
All-Flash Array (AFA) PoC Toolkit version 3.0 - Release Notes
**********************************************************************************

Version 3.0 of the toolkit has been overhauled to be more modular and flexible.
It has been updated to work with the latest vdbench release 5.04.03 which  
should be downloaded directly from Oracle. For XtremIO arrays, A new companion
product is included, the X-PoC Rapid Deployment Utility. This utility automates
the majority of the AFA PoC configuration. The X-PoC utility is the preferred and
recommended method for configuring the PoC environment. For non-XtremIO arrays, 
a new companion product is included, X-RDM. This utility automates the process
of mapping volumes and snapshots to the vdbench workers as RDMs.

The underlying code has been refactored, adding functionality which allows
selecting specific test phases to run. The available phases are: fill, age,
profile, steady, snapprep and snapsteady. An explanation of each phase is below.

A new file (/root/AFA/phases.vdb) controls which phases of testing will run.
The file consists of a list, with each phase (1 per line) being preceded by a 
sequence number. To select which phases will be executed, simply modify the list.
This file is automatically generated by the X-PoC utility and will not exist 
until the utility is run to configure the PoC.

Please see the example below:

     1 fill
     2 age
     3 profile
     4 steady
     #5 snapprep
     #6 snapsteady

In this example, phases 1 through 4 will run sequentially. Since 5 and 6 are 
preceded by a #, they will be ignored and excluded from the test. This can 
be done for any phase listed. Simply add or remove the # that precedes the
sequence number to include or exclude it from the test run.

Phases:

Fill - sequentially fills the array using a mix of large blocks (128k,50,256k,50).
       This is run 2 times to ensure all flashs cells on the array are written.

Age - randomly overwrites the array using a mixed block workload to force the array
      into a non-optimal state.

Profile - the profiling phase is broken down into two run definitions: small and large.
          Small includes block sizes: 4k, 8k, 16k and 32k. Large includes block sizes:
          64k, 128k and 256k. Profiles are built by gradually increasing IOPS for each
          block size at a set read percentage. Read percentages: 0,35,50,80 & 100.

SnapPrep - creates free physical capacity on the array. This is accomplished using
           blkdiscard to empty the last 50% of each presented LUN.

Snapsteady - this phase of testing will provide performance characteristics of volumes
             and snapshots mounted as volumes. It will also provide metrics focused on
             the impact of snapshots when used for continuous data protection (CDP).
             For the duration of this phase, snapshots will be taken at 5 minute
             intervals for all mounted volumes (this includes the snapshots which are
             mounted as volumes). Testing during this phase is restricted to the
             first 50% of each presented LUN since this portion of the disk was not
             cleared during snapprep.

Helper Files/Includes:

The header.vdb and common_*.vdb files have been replaced. The replacement files are
dynamically generated based on the PoC confiuration. A list of the replacement
files and new files are explained below:

pre-env.vdb - This is a new file and is located at /root/AFA/pre-env.vdb and is used
specifically during pre-flight testing. This includes the discovered hosts, number of
JVMs and storage devices and is automatically generated during afa_prep. It has an 
additional parameter that limits the size of the SDs during pre-flight only. This was
essential to ensure accurate results.

poc-env.vdb - This is a new file and is located at /root/AFA/poc-env.vdb and includes
the discovered hosts, number of JVMs and storage devices and is automatically generated
during afa_prep.

snap-env.vdb - This is a new file and is located at /root/AFA/snap-env.vdb and is used
specifically during the snapsteady phase of testing. This includes the discovered hosts,
number of JVMs and storage devices and is automatically generated during afa_prep. It has
an additional parameter that limits the size of the SDs during snapsteady only. This was
essential to ensure accurate results.
  
global.vdb - This is a new file and is located at /root/AFA/global.vdb. A call to
this file is included in each vdbench param file and includes options for histogram,
avoiding scanning for messages and ignoring IO errors. The message scanning will make
the console output cleaner. In rare instances, IO errors from the storage would
cause vdbench to abort. This option increases this count so that temporary 
errors do not abort long runs.

phases.vdb - this is a new file and is located at /root/AFA/phases.vdb. This controls
which phases of testing will run. The file consists of a list, with each phase
(1 per line) being preceded by a sequence number. This is automatically generated by
the X-PoC utility.

snapprep.sh - this is a new file and is located at /root/tools/snapprep.sh. This
file is automatically generated and called during the snapprep phase. This script
creates free space on the array by discarding the data contained in the last 50% of 
each mounted RDM volume.

progress - This is a new file and is located at /root/tools/progress. This file is
an include for the snapprep script and displays the progress of the snapprep phase.

snapsteady_param.vdb - This is a new file and is located at /root/AFA/snapsteady_param.vdb
and contains the parameters for steady state testing of volumes and snapshots while
snapshots are created every 5 minutes.

snap_start.sh - This is a new file and is located at /root/tools/snap_start.sh and contains
a curl command that interacts with the XtremIO REST API. This is called at the start of the
snapsteady run and will enable the scheduler that was created by the X-PoC utility.

snap_stop.sh - This is a new file and is located at /root/tools/snap_stop.sh and contains
a curl command that interacts with the XtremIO REST API. This is called at the start of the
snapsteady run and will disable the scheduler that was created by the X-PoC utility.

set_perm.sh - This is a new file and is located at /root/tools/set_perm.sh. This file is
called during afa_prep and is used to set permissions for the AFA PoC files.

mk_scripts.sh – This is a new file and is located at /root/tools/mk_scripts.sh. This file
is called during afa_prep. This script checks for the existence of the phases.vdb. The 
script will create it after prompting whether or not to include snapshots. If the option
to include snapshots is selected, the script will check for the existence of the 
snap_start.sh and snap_stop.sh scripts. If the files do not exist, they will be created
with “SAMPLE” data. These scripts will need to be modified with commands that are relevant
to the array being tested.
